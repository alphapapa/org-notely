#+TITLE: org-notely

#+PROPERTY: LOGGING nil

# Note: This readme works with the org-make-toc <https://github.com/alphapapa/org-make-toc> package, which automatically updates the table of contents.

# [[https://melpa.org/#/package-name][file:https://melpa.org/packages/org-notely-badge.svg]] [[https://stable.melpa.org/#/package-name][file:https://stable.melpa.org/packages/org-notely-badge.svg]]

This package makes it easy to quickly take a note in a new heading displayed in a new, indirect buffer.  It's similar to Org's built-in capture functionality, but it's not limited to one capture "session", so you can pop up a new note at any time, without interfering with other activities in Emacs.

For convenience, the new, indirect buffer has =RET= bound to a command that renames the buffer according to the heading when pressed with point on the heading, and an inactive timestamp is automatically inserted at the beginning of the note.

Used with [[https://github.com/alphapapa/yequake][Yequake]], it can also pop open a new Emacs frame.

# * Screenshots
# 
# This screenshot shows how to frobnicate the fripulator:
# 
# [[screenshot1.png]]

* Contents                                                         :noexport:
:PROPERTIES:
:TOC:      this
:END:
-  [[#installation][Installation]]
-  [[#usage][Usage]]
-  [[#changelog][Changelog]]

* Installation
:PROPERTIES:
:TOC:      0
:END:

# ** MELPA

# If you installed from MELPA, you're done.

** Quelpa

Installing with [[https://framagit.org/steckerhalter/quelpa][Quelpa]] is easy:

1.  Install [[https://github.com/quelpa/quelpa-use-package#installation][quelpa-use-package]] (which can be installed directly from MELPA).
2.  Add this form to your init file:

#+BEGIN_SRC elisp
  (use-package org-notely
    :quelpa (org-notely :fetcher github :repo "alphapapa/org-notely"))
#+END_SRC

* Usage
:PROPERTIES:
:TOC:      0
:END:

1. Run =M-x customize-group RET org-notely RET= and configure the options =org-notely-file= and =org-notely-outline-path= according to your preferences.
2. =M-x org-notely RET= to pop up a new note buffer at the configured place.
3. =M-x org-notely-here RET= to pop up a new note buffer under the heading at point.

** Tips

+ The command ~org-notely~ accepts a ~point-marker~ argument, so one could easily write a command to add a new heading to any other certain heading (similar to Org Capture, but without requiring advance configuration).

*** Yequake

Yequake makes it easy to display =org-notely= in a new Emacs frame.  Here's an example configuration:

#+BEGIN_SRC elisp
  (use-package yequake
    :custom
    (yequake-frames
     (list (cons "org-notely"
                 (list (cons 'buffer-fns '(org-notely))
                       (cons 'width 0.25)
                       (cons 'height 0.5))))))
#+END_SRC

Then bind a global keyboard shortcut in your desktop environment to run this command, which pops up a new Emacs frame showing a new =org-notely= buffer:

#+BEGIN_SRC sh
  emacsclient -n -e '(yequake-toggle "org-notely")'
#+END_SRC

This configuration uses [[https://github.com/alphapapa/org-sidebar][org-sidebar]] to display a list of =org-notely= notes, organized by month and year, next to the new-note buffer:

#+BEGIN_SRC elisp
  (use-package yequake
    :custom
    (yequake-frames
     '(("org-notely"
        (buffer-fns (lambda ()
                      (find-file-noselect org-notely-file))
                    (lambda ()
                      (org-with-wide-buffer
                       (org-global-cycle '(4))
                       (goto-char (org-find-olp '("Notes") 'this-buffer))
                       (org-cycle)
                       (org-tree-to-indirect-buffer)
                       (let ((org-super-agenda-date-format "%Y %B"))
                         (org-sidebar-ql (current-buffer)
                                         '(regexp ".")
                                         :narrow t :sort 'date
                                         :super-groups '((:auto-ts))))
                       (goto-char (org-end-of-subtree))))
                    org-notely)
        (width . 0.25)
        (height . 0.5)))))
#+END_SRC

* Changelog
:PROPERTIES:
:TOC:      0
:END:

** 0.1-pre

Initial release.

* Development
:PROPERTIES:
:TOC:      ignore
:END:

Bug reports, feature requests, suggestions â€” /oh my/!

* License
:PROPERTIES:
:TOC:      ignore
:END:

GPLv3

# Local Variables:
# eval: (require 'org-make-toc)
# before-save-hook: org-make-toc
# org-export-with-properties: ()
# org-export-with-title: t
# End:

